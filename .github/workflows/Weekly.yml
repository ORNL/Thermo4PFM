name: Nightly
on:
  push:
    branches:
      - nightly_testing
  schedule:
    - cron:  '0 9 * * 1'

jobs:
  CI:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        distro: ['ubuntu:latest']
        cmake_build_type: ['Debug']
    runs-on: ubuntu-20.04
    container: ghcr.io/ecp-copa/ci-containers/${{ matrix.distro }}
    steps:
      - name: Install bzip2
        run: |
          sudo apt-get update
          sudo apt-get install -y bzip2
          sudo apt-get clean
      - name: Cache boost
        uses: actions/cache@v2
        id: boost-cache
        with:
          path: ~/boost
          key: boost-${{ matrix.distro }}-1.75.0
          restore-keys: boost-${{ matrix.distro }}
      - name: Get Boost
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
             wget --quiet https://boostorg.jfrog.io/artifactory/main/release/1.75.0/source/boost_1_75_0.tar.bz2 \
                  --output-document=boost.tar.bz2
             mkdir boost
             tar -xf boost.tar.bz2 -C boost --strip-components=1
      - name: Build Boost
        if: steps.boost-cache.outputs.cache-hit != 'true'
        working-directory: boost
        run: |
             ./bootstrap.sh --prefix=$HOME/boost
             ./b2 \
             hardcode-dll-paths=true dll-path=$HOME/boost/lib \
             link=shared variant=release cxxflags=-w \
             install
      - name: Checkout
        uses: actions/checkout@v2.2.0
      - name: Build
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/thermo4pfm \
            -DCMAKE_PREFIX_PATH="$HOME/boost" \
            -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic" \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Test
        run: |
          CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --target test
